// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineSpotifyPlaylistTracker.Domain;

#nullable disable

namespace OnlineSpotifyPlaylistTracker.Domain.Migrations
{
    [DbContext(typeof(SpotifyPlaylistTrackerContext))]
    [Migration("20240113013458_TrackDuration")]
    partial class TrackDuration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OnlineSpotifyPlaylistTracker.Domain.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlbumArt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DurationMs")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("OnlineSpotifyPlaylistTracker.Domain.Models.TrackPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsPlayed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrackId")
                        .IsUnique();

                    b.ToTable("TrackPositions");
                });

            modelBuilder.Entity("OnlineSpotifyPlaylistTracker.Domain.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "karnage11i",
                            DisplayName = "Alex Karney",
                            ImageName = "ak"
                        },
                        new
                        {
                            Id = "magsatire",
                            DisplayName = "Jack McGrath",
                            ImageName = "jm"
                        },
                        new
                        {
                            Id = "1232101260",
                            DisplayName = "Chris Quigley",
                            ImageName = "cq"
                        },
                        new
                        {
                            Id = "1238290776",
                            DisplayName = "Joshua Landy",
                            ImageName = "jl"
                        },
                        new
                        {
                            Id = "1233033915",
                            DisplayName = "Alex Barker",
                            ImageName = "ab"
                        },
                        new
                        {
                            Id = "1244598275",
                            DisplayName = "Daniel Hornblower",
                            ImageName = "dh"
                        },
                        new
                        {
                            Id = "genjamon1234",
                            DisplayName = "Josh Anderson",
                            ImageName = "ja"
                        },
                        new
                        {
                            Id = "braeden.wilson",
                            DisplayName = "Braeden Wilson",
                            ImageName = "bw"
                        },
                        new
                        {
                            Id = "1278556031",
                            DisplayName = "Matt Knightbridge",
                            ImageName = "mk"
                        },
                        new
                        {
                            Id = "griffkyn22",
                            DisplayName = "Griffyn Heels",
                            ImageName = "gh"
                        },
                        new
                        {
                            Id = "1252730340",
                            DisplayName = "Scott Leah",
                            ImageName = "sl"
                        });
                });

            modelBuilder.Entity("OnlineSpotifyPlaylistTracker.Domain.Models.Track", b =>
                {
                    b.HasOne("OnlineSpotifyPlaylistTracker.Domain.Models.User", "User")
                        .WithMany("Tracks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineSpotifyPlaylistTracker.Domain.Models.TrackPosition", b =>
                {
                    b.HasOne("OnlineSpotifyPlaylistTracker.Domain.Models.Track", "Track")
                        .WithOne("TrackPosition")
                        .HasForeignKey("OnlineSpotifyPlaylistTracker.Domain.Models.TrackPosition", "TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("OnlineSpotifyPlaylistTracker.Domain.Models.Track", b =>
                {
                    b.Navigation("TrackPosition")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSpotifyPlaylistTracker.Domain.Models.User", b =>
                {
                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
